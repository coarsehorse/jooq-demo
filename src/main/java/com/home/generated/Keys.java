/**
 * This class is generated by jOOQ
 */
package com.home.generated;


import com.home.generated.tables.Authors;
import com.home.generated.tables.BookAuthor;
import com.home.generated.tables.Books;
import com.home.generated.tables.records.AuthorsRecord;
import com.home.generated.tables.records.BookAuthorRecord;
import com.home.generated.tables.records.BooksRecord;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;

import javax.annotation.Generated;


/**
 * A class modelling foreign key relationships between tables of the <code>jooq_demo</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<AuthorsRecord, Long> IDENTITY_AUTHORS = Identities0.IDENTITY_AUTHORS;
	public static final Identity<BooksRecord, Long> IDENTITY_BOOKS = Identities0.IDENTITY_BOOKS;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<AuthorsRecord> KEY_AUTHORS_PRIMARY = UniqueKeys0.KEY_AUTHORS_PRIMARY;
	public static final UniqueKey<BooksRecord> KEY_BOOKS_PRIMARY = UniqueKeys0.KEY_BOOKS_PRIMARY;
	public static final UniqueKey<BookAuthorRecord> KEY_BOOK_AUTHOR_PRIMARY = UniqueKeys0.KEY_BOOK_AUTHOR_PRIMARY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final ForeignKey<BookAuthorRecord, BooksRecord> CONSTR_BOOKAUTHOR_BOOK_FK = ForeignKeys0.CONSTR_BOOKAUTHOR_BOOK_FK;
	public static final ForeignKey<BookAuthorRecord, AuthorsRecord> CONSTR_BOOKAUTHOR_AUTHOR_FK = ForeignKeys0.CONSTR_BOOKAUTHOR_AUTHOR_FK;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<AuthorsRecord, Long> IDENTITY_AUTHORS = createIdentity(Authors.AUTHORS, Authors.AUTHORS.ID);
		public static Identity<BooksRecord, Long> IDENTITY_BOOKS = createIdentity(Books.BOOKS, Books.BOOKS.ID);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<AuthorsRecord> KEY_AUTHORS_PRIMARY = createUniqueKey(Authors.AUTHORS, Authors.AUTHORS.ID);
		public static final UniqueKey<BooksRecord> KEY_BOOKS_PRIMARY = createUniqueKey(Books.BOOKS, Books.BOOKS.ID);
		public static final UniqueKey<BookAuthorRecord> KEY_BOOK_AUTHOR_PRIMARY = createUniqueKey(BookAuthor.BOOK_AUTHOR, BookAuthor.BOOK_AUTHOR.BOOK_ID, BookAuthor.BOOK_AUTHOR.AUTHOR_ID);
	}

	private static class ForeignKeys0 extends AbstractKeys {
		public static final ForeignKey<BookAuthorRecord, BooksRecord> CONSTR_BOOKAUTHOR_BOOK_FK = createForeignKey(com.home.generated.Keys.KEY_BOOKS_PRIMARY, BookAuthor.BOOK_AUTHOR, BookAuthor.BOOK_AUTHOR.BOOK_ID);
		public static final ForeignKey<BookAuthorRecord, AuthorsRecord> CONSTR_BOOKAUTHOR_AUTHOR_FK = createForeignKey(com.home.generated.Keys.KEY_AUTHORS_PRIMARY, BookAuthor.BOOK_AUTHOR, BookAuthor.BOOK_AUTHOR.AUTHOR_ID);
	}
}
