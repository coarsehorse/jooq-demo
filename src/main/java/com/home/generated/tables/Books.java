/**
 * This class is generated by jOOQ
 */
package com.home.generated.tables;


import com.home.generated.JooqDemo;
import com.home.generated.Keys;
import com.home.generated.tables.records.BooksRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Books extends TableImpl<BooksRecord> {

	private static final long serialVersionUID = 1720051019;

	/**
	 * The reference instance of <code>jooq_demo.books</code>
	 */
	public static final Books BOOKS = new Books();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<BooksRecord> getRecordType() {
		return BooksRecord.class;
	}

	/**
	 * The column <code>jooq_demo.books.id</code>.
	 */
	public final TableField<BooksRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>jooq_demo.books.title</code>.
	 */
	public final TableField<BooksRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>jooq_demo.books.genre</code>.
	 */
	public final TableField<BooksRecord, String> GENRE = createField("genre", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

	/**
	 * The column <code>jooq_demo.books.publishing_date</code>.
	 */
	public final TableField<BooksRecord, Timestamp> PUBLISHING_DATE = createField("publishing_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>jooq_demo.books.pages_num</code>.
	 */
	public final TableField<BooksRecord, Integer> PAGES_NUM = createField("pages_num", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>jooq_demo.books</code> table reference
	 */
	public Books() {
		this("books", null);
	}

	/**
	 * Create an aliased <code>jooq_demo.books</code> table reference
	 */
	public Books(String alias) {
		this(alias, BOOKS);
	}

	private Books(String alias, Table<BooksRecord> aliased) {
		this(alias, aliased, null);
	}

	private Books(String alias, Table<BooksRecord> aliased, Field<?>[] parameters) {
		super(alias, JooqDemo.JOOQ_DEMO, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<BooksRecord, Long> getIdentity() {
		return Keys.IDENTITY_BOOKS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<BooksRecord> getPrimaryKey() {
		return Keys.KEY_BOOKS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<BooksRecord>> getKeys() {
		return Arrays.<UniqueKey<BooksRecord>>asList(Keys.KEY_BOOKS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Books as(String alias) {
		return new Books(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Books rename(String name) {
		return new Books(name, null);
	}
}
