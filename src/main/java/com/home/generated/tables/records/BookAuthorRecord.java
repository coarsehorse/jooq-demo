/**
 * This class is generated by jOOQ
 */
package com.home.generated.tables.records;


import com.home.generated.tables.BookAuthor;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookAuthorRecord extends UpdatableRecordImpl<BookAuthorRecord> implements Record2<Long, Long> {

	private static final long serialVersionUID = 1421667577;

	/**
	 * Setter for <code>jooq_demo.book_author.book_id</code>.
	 */
	public void setBookId(Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>jooq_demo.book_author.book_id</code>.
	 */
	public Long getBookId() {
		return (Long) getValue(0);
	}

	/**
	 * Setter for <code>jooq_demo.book_author.author_id</code>.
	 */
	public void setAuthorId(Long value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>jooq_demo.book_author.author_id</code>.
	 */
	public Long getAuthorId() {
		return (Long) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record2<Long, Long> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Long, Long> fieldsRow() {
		return (Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Long, Long> valuesRow() {
		return (Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field1() {
		return BookAuthor.BOOK_AUTHOR.BOOK_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field2() {
		return BookAuthor.BOOK_AUTHOR.AUTHOR_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value1() {
		return getBookId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value2() {
		return getAuthorId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BookAuthorRecord value1(Long value) {
		setBookId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BookAuthorRecord value2(Long value) {
		setAuthorId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BookAuthorRecord values(Long value1, Long value2) {
		value1(value1);
		value2(value2);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached BookAuthorRecord
	 */
	public BookAuthorRecord() {
		super(BookAuthor.BOOK_AUTHOR);
	}

	/**
	 * Create a detached, initialised BookAuthorRecord
	 */
	public BookAuthorRecord(Long bookId, Long authorId) {
		super(BookAuthor.BOOK_AUTHOR);

		setValue(0, bookId);
		setValue(1, authorId);
	}
}
