/**
 * This class is generated by jOOQ
 */
package com.home.generated.tables.records;


import com.home.generated.tables.Books;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BooksRecord extends UpdatableRecordImpl<BooksRecord> implements Record4<Long, String, String, Timestamp> {

	private static final long serialVersionUID = -1369083381;

	/**
	 * Setter for <code>jooq_demo.books.id</code>.
	 */
	public void setId(Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>jooq_demo.books.id</code>.
	 */
	public Long getId() {
		return (Long) getValue(0);
	}

	/**
	 * Setter for <code>jooq_demo.books.title</code>.
	 */
	public void setTitle(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>jooq_demo.books.title</code>.
	 */
	public String getTitle() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>jooq_demo.books.genre</code>.
	 */
	public void setGenre(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>jooq_demo.books.genre</code>.
	 */
	public String getGenre() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>jooq_demo.books.publishing_date</code>.
	 */
	public void setPublishingDate(Timestamp value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>jooq_demo.books.publishing_date</code>.
	 */
	public Timestamp getPublishingDate() {
		return (Timestamp) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Long, String, String, Timestamp> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Long, String, String, Timestamp> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field1() {
		return Books.BOOKS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Books.BOOKS.TITLE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Books.BOOKS.GENRE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field4() {
		return Books.BOOKS.PUBLISHING_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getTitle();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getGenre();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value4() {
		return getPublishingDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BooksRecord value1(Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BooksRecord value2(String value) {
		setTitle(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BooksRecord value3(String value) {
		setGenre(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BooksRecord value4(Timestamp value) {
		setPublishingDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BooksRecord values(Long value1, String value2, String value3, Timestamp value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached BooksRecord
	 */
	public BooksRecord() {
		super(Books.BOOKS);
	}

	/**
	 * Create a detached, initialised BooksRecord
	 */
	public BooksRecord(Long id, String title, String genre, Timestamp publishingDate) {
		super(Books.BOOKS);

		setValue(0, id);
		setValue(1, title);
		setValue(2, genre);
		setValue(3, publishingDate);
	}
}
